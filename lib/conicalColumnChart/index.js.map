{"version":3,"file":"index.js","sources":["../../src/components/conicalColumnChart/index.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Chart data\r\n   * @type {Array<Object>}\r\n   * @default data = []\r\n   */\r\n  data: [],\r\n  /**\r\n   * @description Chart img\r\n   * @type {Array<String>}\r\n   * @default img = []\r\n   */\r\n  img: [],\r\n  /**\r\n   * @description Chart font size\r\n   * @type {Number}\r\n   * @default fontSize = 12\r\n   */\r\n  fontSize: 12,\r\n  /**\r\n   * @description Img side length\r\n   * @type {Number}\r\n   * @default imgSideLength = 30\r\n   */\r\n  imgSideLength: 30,\r\n  /**\r\n   * @description Column color\r\n   * @type {String}\r\n   * @default columnColor = 'rgba(0, 194, 255, 0.4)'\r\n   */\r\n  columnColor: 'rgba(0, 194, 255, 0.4)',\r\n  /**\r\n   * @description Text color\r\n   * @type {String}\r\n   * @default textColor = '#fff'\r\n   */\r\n  textColor: '#fff',\r\n  /**\r\n   * @description Show value\r\n   * @type {Boolean}\r\n   * @default showValue = false\r\n   */\r\n  showValue: false\r\n}\r\n\r\nfunction getData(mergedConfig) {\r\n  let { data } = mergedConfig\r\n\r\n  data = deepClone(data, true)\r\n\r\n  data.sort(({ value: a }, { value: b }) => {\r\n    if (a > b) return -1\r\n    if (a < b) return 1\r\n    if (a === b) return 0\r\n  })\r\n\r\n  const max = data[0] ? data[0].value : 10\r\n\r\n  data = data.map(item => ({\r\n    ...item,\r\n    percent: item.value / max\r\n  }))\r\n\r\n  return data\r\n}\r\n\r\nconst ConicalColumnChart = ({ config = {}, className, style }) => {\r\n  const { width, height, domRef } = useAutoResize(calcData, calcData)\r\n\r\n  const [{ mergedConfig, column }, setState] = useState({\r\n    mergedConfig: null,\r\n\r\n    column: []\r\n  })\r\n\r\n  function calcData() {\r\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n    mergedConfig.data = getData(mergedConfig)\r\n\r\n    setState({ mergedConfig, column: getColumn(mergedConfig) })\r\n  }\r\n\r\n  function getColumn(mergedConfig) {\r\n    const { imgSideLength, fontSize, data } = mergedConfig\r\n\r\n    const itemNum = data.length\r\n    const gap = width / (itemNum + 1)\r\n\r\n    const useAbleHeight = height - imgSideLength - fontSize - 5\r\n    const svgBottom = height - fontSize - 5\r\n\r\n    return data.map((item, i) => {\r\n      const { percent } = item\r\n\r\n      const middleXPos = gap * (i + 1)\r\n      const leftXPos = gap * i\r\n      const rightXpos = gap * (i + 2)\r\n\r\n      const middleYPos = svgBottom - useAbleHeight * percent\r\n      const controlYPos = useAbleHeight * percent * 0.6 + middleYPos\r\n\r\n      const d = `\r\n        M${leftXPos}, ${svgBottom}\r\n        Q${middleXPos}, ${controlYPos} ${middleXPos},${middleYPos}\r\n        M${middleXPos},${middleYPos}\r\n        Q${middleXPos}, ${controlYPos} ${rightXpos},${svgBottom}\r\n        L${leftXPos}, ${svgBottom}\r\n        Z\r\n      `\r\n\r\n      const textY = (svgBottom + middleYPos) / 2 + fontSize / 2\r\n\r\n      return {\r\n        ...item,\r\n        d,\r\n        x: middleXPos,\r\n        y: middleYPos,\r\n        textY\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(calcData, [config])\r\n\r\n  const classNames = useMemo(\r\n    () => classnames('dv-conical-column-chart', className),\r\n    [className]\r\n  )\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg width={width} height={height}>\r\n        {column.map((item, i) => (\r\n          <g key={i}>\r\n            <path d={item.d} fill={mergedConfig.columnColor} />\r\n            <text\r\n              style={{ fontSize: `${mergedConfig.fontSize}px` }}\r\n              fill={mergedConfig.textColor}\r\n              x={item.x}\r\n              y={height - 4}\r\n            >\r\n              {item.name}\r\n            </text>\r\n            {!!mergedConfig.img.length && (\r\n              <image\r\n                href={mergedConfig.img[i % mergedConfig.img.length]}\r\n                width={mergedConfig.imgSideLength}\r\n                height={mergedConfig.imgSideLength}\r\n                x={item.x - mergedConfig.imgSideLength / 2}\r\n                y={item.y - mergedConfig.imgSideLength}\r\n              />\r\n            )}\r\n            {mergedConfig.showValue && (\r\n              <text\r\n                style={{ fontSize: `${mergedConfig.fontSize}px` }}\r\n                fill={mergedConfig.textColor}\r\n                x={item.x}\r\n                y={item.textY}\r\n              >\r\n                {item.value}\r\n              </text>\r\n            )}\r\n          </g>\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nConicalColumnChart.propTypes = {\r\n  config: PropTypes.object,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nConicalColumnChart.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default ConicalColumnChart\r\n"],"names":["defaultConfig","getData","mergedConfig","data","deepClone","sort","a","value","b","max","map","item","ConicalColumnChart","config","className","style","useAutoResize","calcData","width","height","domRef","useState","column","setState","deepMerge","getColumn","imgSideLength","fontSize","itemNum","length","gap","useAbleHeight","svgBottom","i","percent","middleXPos","leftXPos","rightXpos","middleYPos","controlYPos","d","textY","classNames","useMemo","classnames","React","columnColor","textColor","x","name","img","y","showValue","propTypes","PropTypes","object","string","defaultProps"],"mappings":"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"}