{"version":3,"file":"index.js","sources":["../../src/components/scrollBoard/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Board header\r\n   * @type {Array<String>}\r\n   * @default header = []\r\n   * @example header = ['column1', 'column2', 'column3']\r\n   */\r\n  header: [],\r\n  /**\r\n   * @description Board data\r\n   * @type {Array<Array>}\r\n   * @default data = []\r\n   */\r\n  data: [],\r\n  /**\r\n   * @description Row num\r\n   * @type {Number}\r\n   * @default rowNum = 5\r\n   */\r\n  rowNum: 5,\r\n  /**\r\n   * @description Header background color\r\n   * @type {String}\r\n   * @default headerBGC = '#00BAFF'\r\n   */\r\n  headerBGC: '#00BAFF',\r\n  /**\r\n   * @description Odd row background color\r\n   * @type {String}\r\n   * @default oddRowBGC = '#003B51'\r\n   */\r\n  oddRowBGC: '#003B51',\r\n  /**\r\n   * @description Even row background color\r\n   * @type {String}\r\n   * @default evenRowBGC = '#003B51'\r\n   */\r\n  evenRowBGC: '#0A2732',\r\n  /**\r\n   * @description Scroll wait time\r\n   * @type {Number}\r\n   * @default waitTime = 2000\r\n   */\r\n  waitTime: 2000,\r\n  /**\r\n   * @description Header height\r\n   * @type {Number}\r\n   * @default headerHeight = 35\r\n   */\r\n  headerHeight: 35,\r\n  /**\r\n   * @description Column width\r\n   * @type {Array<Number>}\r\n   * @default columnWidth = []\r\n   */\r\n  columnWidth: [],\r\n  /**\r\n   * @description Column align\r\n   * @type {Array<String>}\r\n   * @default align = []\r\n   * @example align = ['left', 'center', 'right']\r\n   */\r\n  align: [],\r\n  /**\r\n   * @description Show index\r\n   * @type {Boolean}\r\n   * @default index = false\r\n   */\r\n  index: false,\r\n  /**\r\n   * @description Carousel type\r\n   * @type {String}\r\n   * @default carousel = 'single'\r\n   * @example carousel = 'single' | 'page'\r\n   */\r\n  carousel: 'single'\r\n}\r\n\r\nfunction calcHeaderData({ header, index }) {\r\n  if (!header.length) {\r\n    return []\r\n  }\r\n\r\n  header = [...header]\r\n\r\n  if (index) header.unshift('#')\r\n\r\n  return header\r\n}\r\n\r\nfunction calcRowsData({ data, index, headerBGC, rowNum }) {\r\n  if (index) {\r\n    data = data.map((row, i) => {\r\n      row = [...row]\r\n\r\n      const indexTag = `<span className=\"index\" style=\"background-color: ${headerBGC};\">${i +\r\n        1}</spand>`\r\n\r\n      row.unshift(indexTag)\r\n\r\n      return row\r\n    })\r\n  }\r\n\r\n  data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\r\n\r\n  const rowLength = data.length\r\n\r\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\r\n    data = [...data, ...data]\r\n  }\r\n\r\n  return data.map((d, i) => ({ ...d, scroll: i }))\r\n}\r\n\r\nfunction calcAligns(mergedConfig, header) {\r\n  const columnNum = header.length\r\n\r\n  let aligns = new Array(columnNum).fill('left')\r\n\r\n  const { align } = mergedConfig\r\n\r\n  return deepMerge(aligns, align)\r\n}\r\n\r\nconst ScrollBoard = ({ onClick, config }) => {\r\n  const { width, height, domRef } = useAutoResize(calcData, onResize)\r\n\r\n  const [state, setState] = useState({\r\n    mergedConfig: null,\r\n\r\n    header: [],\r\n\r\n    rowsData: [],\r\n\r\n    rows: [],\r\n\r\n    widths: [],\r\n\r\n    heights: [],\r\n\r\n    avgHeight: 0,\r\n\r\n    aligns: [],\r\n\r\n    animationIndex: 0\r\n  })\r\n\r\n  const {\r\n    mergedConfig,\r\n    header,\r\n    rowsData,\r\n    rows,\r\n    widths,\r\n    heights,\r\n    aligns\r\n  } = state\r\n\r\n  const timerRef = useRef(null)\r\n  const stateRef = useRef(state)\r\n\r\n  stateRef.current = state\r\n\r\n  function onResize() {\r\n    if (!mergedConfig) return\r\n\r\n    const widths = calcWidths(mergedConfig, rowsData)\r\n\r\n    const heightData = calcHeights(mergedConfig, header)\r\n\r\n    setState(state => ({ ...state, widths, ...heightData }))\r\n  }\r\n\r\n  function calcData() {\r\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n    const header = calcHeaderData(mergedConfig)\r\n\r\n    const rowsData = calcRowsData(mergedConfig)\r\n\r\n    const widths = calcWidths(mergedConfig, rowsData)\r\n\r\n    const heightData = calcHeights(mergedConfig, header)\r\n\r\n    const aligns = calcAligns(mergedConfig, header)\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      mergedConfig,\r\n      header,\r\n      rowsData,\r\n      rows: [...rowsData],\r\n      widths,\r\n      ...heightData,\r\n      aligns\r\n    }))\r\n\r\n    animation(true)\r\n  }\r\n\r\n  function calcWidths({ columnWidth, header }, rowsData) {\r\n    const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\r\n\r\n    let columnNum = 0\r\n    if (rowsData[0]) {\r\n      columnNum = rowsData[0].ceils.length\r\n    } else if (header.length) {\r\n      columnNum = header.length\r\n    }\r\n\r\n    const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\r\n\r\n    const widths = new Array(columnNum).fill(avgWidth)\r\n\r\n    return deepMerge(widths, columnWidth)\r\n  }\r\n\r\n  function calcHeights(\r\n    { headerHeight, rowNum, data },\r\n    header,\r\n    onresize = false\r\n  ) {\r\n    let allHeight = height\r\n\r\n    if (header.length) allHeight -= headerHeight\r\n\r\n    const avgHeight = allHeight / rowNum\r\n\r\n    return onresize\r\n      ? { avgHeight }\r\n      : { avgHeight, heights: new Array(data.length).fill(avgHeight) }\r\n  }\r\n\r\n  async function animation(start = false) {\r\n    let {\r\n      avgHeight,\r\n      animationIndex,\r\n      mergedConfig: { waitTime, carousel, rowNum },\r\n      rowsData\r\n    } = stateRef.current\r\n\r\n    const rowLength = rowsData.length\r\n\r\n    if (rowNum >= rowLength) return\r\n\r\n    if (start) await new Promise(resolve => setTimeout(resolve, waitTime))\r\n\r\n    const animationNum = carousel === 'single' ? 1 : rowNum\r\n\r\n    let rows = rowsData.slice(animationIndex)\r\n    rows.push(...rowsData.slice(0, animationIndex))\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      rows,\r\n      heights: new Array(rowLength).fill(avgHeight)\r\n    }))\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 300))\r\n\r\n    animationIndex += animationNum\r\n\r\n    const back = animationIndex - rowLength\r\n    if (back >= 0) animationIndex = back\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      animationIndex,\r\n      heights: [...state.heights].splice(\r\n        0,\r\n        animationNum,\r\n        ...new Array(animationNum).fill(0)\r\n      )\r\n    }))\r\n\r\n    timerRef.current = setTimeout(animation, waitTime - 300)\r\n  }\r\n\r\n  function emitEvent(ri, ci, row, ceil) {\r\n    const { ceils, rowIndex } = row\r\n\r\n    onClick && onClick({ row: ceils, ceil, rowIndex, columnIndex: ci })\r\n  }\r\n\r\n  const getBackgroundColor = rowIndex =>\r\n    mergedConfig[rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']\r\n\r\n  useEffect(() => {\r\n    calcData()\r\n\r\n    return () => clearTimeout(timerRef.current)\r\n  }, [config])\r\n\r\n  return (\r\n    <div className='dv-scroll-board' ref={domRef}>\r\n      {!!header.length && !!mergedConfig && (\r\n        <div\r\n          className='header'\r\n          style={`background-color: ${mergedConfig.headerBGC};`}\r\n        >\r\n          {header.map((headerItem, i) => (\r\n            <div\r\n              className='header-item'\r\n              key={headerItem + i}\r\n              style={`\r\n                    height: ${mergedConfig.headerHeight}px;\r\n                    line-height: ${mergedConfig.headerHeight}px;\r\n                    width: ${widths[i]}px;\r\n                  `}\r\n              align={aligns[i]}\r\n              dangerouslySetInnerHTML={{ __html: headerItem }}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {!!mergedConfig && (\r\n        <div\r\n          className='rows'\r\n          style={`height: ${height -\r\n            (header.length ? mergedConfig.headerHeight : 0)}px;`}\r\n        >\r\n          {rows.map((row, ri) => (\r\n            <div\r\n              className='row-item'\r\n              key={row.toString() + row.scroll}\r\n              style={`\r\n                    height: ${heights[ri]}px;\r\n                    line-height: ${heights[ri]}px;\r\n                    background-color: ${getBackgroundColor(row.rowIndex)};\r\n                  `}\r\n            >\r\n              {row.ceils.map((ceil, ci) => (\r\n                <div\r\n                  className='ceil'\r\n                  key={ceil + ri + ci}\r\n                  style={`width: ${widths[ci]}px;`}\r\n                  align={aligns[ci]}\r\n                  dangerouslySetInnerHTML={{ __html: ceil }}\r\n                  onClick={() => emitEvent(ri, ci, row, ceil)}\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nScrollBoard.propTypes = {\r\n  config: PropTypes.object,\r\n  onClick: PropTypes.func\r\n}\r\n\r\n// 指定 props 的默认值：\r\nScrollBoard.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default ScrollBoard\r\n"],"names":["defaultConfig","calcHeaderData","header","index","length","unshift","calcRowsData","data","headerBGC","rowNum","map","row","i","indexTag","ceils","rowIndex","rowLength","d","scroll","calcAligns","mergedConfig","columnNum","aligns","Array","fill","align","deepMerge","ScrollBoard","start","stateRef","current","avgHeight","animationIndex","waitTime","carousel","rowsData","Promise","setTimeout","resolve","slice","push","state","animationNum","back","heights","splice","animation","onClick","config","useAutoResize","calcData","onResize","width","height","domRef","useState","setState","rows","widths","timerRef","useRef","calcWidths","heightData","calcHeights","deepClone","columnWidth","usedWidth","reduce","all","w","avgWidth","headerHeight","onresize","allHeight","emitEvent","ri","ci","ceil","columnIndex","getBackgroundColor","clearTimeout","React","headerItem","__html","toString","propTypes","PropTypes","object","func","defaultProps"],"mappings":"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"}