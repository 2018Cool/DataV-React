{"version":3,"file":"index.js","sources":["../../src/components/capsuleChart/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Capsule chart data\r\n   * @type {Array<Object>}\r\n   * @default data = []\r\n   * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\r\n   */\r\n  data: [],\r\n  /**\r\n   * @description Colors (hex|rgb|rgba|color keywords)\r\n   * @type {Array<String>}\r\n   * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\r\n   * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\r\n   */\r\n  colors: [\r\n    '#37a2da',\r\n    '#32c5e9',\r\n    '#67e0e3',\r\n    '#9fe6b8',\r\n    '#ffdb5c',\r\n    '#ff9f7f',\r\n    '#fb7293'\r\n  ],\r\n  /**\r\n   * @description Chart unit\r\n   * @type {String}\r\n   * @default unit = ''\r\n   */\r\n  unit: ''\r\n}\r\n\r\nconst CapsuleChart = ({ config = {} }) => {\r\n  const [{ mergedConfig, labelData, capsuleLength }, setState] = useState({\r\n    mergedConfig: null,\r\n    labelData: [],\r\n    capsuleLength: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n    const { data } = mergedConfig\r\n\r\n    if (!data.length) return\r\n\r\n    const capsuleValue = data.map(({ value }) => value)\r\n\r\n    const maxValue = Math.max(...capsuleValue)\r\n\r\n    const oneFifth = maxValue / 5\r\n\r\n    setState({\r\n      mergedConfig,\r\n      capsuleLength: capsuleValue.map(v => (maxValue ? v / maxValue : 0)),\r\n      labelData: new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth))\r\n    })\r\n  }, [config])\r\n\r\n  return (\r\n    <div className='dv-capsule-chart'>\r\n      {!!mergedConfig && (\r\n        <React.Fragment>\r\n          <div className='label-column'>\r\n            {mergedConfig.data.map(({ name }) => (\r\n              <div key={name}>{name}</div>\r\n            ))}\r\n            <div>&nbsp;</div>\r\n          </div>\r\n\r\n          <div className='capsule-container'>\r\n            {capsuleLength.map((capsule, index) => (\r\n              <div className='capsule-item' key={index}>\r\n                <div\r\n                  style={`width: ${capsule * 100}%; background-color: ${\r\n                    mergedConfig.colors[index % mergedConfig.colors.length]\r\n                  };`}\r\n                />\r\n              </div>\r\n            ))}\r\n            <div className='unit-label'>\r\n              {labelData.map((label, index) => (\r\n                <div key={label + index}>{label}</div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {!!mergedConfig.unit && (\r\n            <div className='unit-text'>{mergedConfig.unit}</div>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nCapsuleChart.propTypes = {\r\n  config: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nCapsuleChart.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default CapsuleChart\r\n"],"names":["defaultConfig","CapsuleChart","config","useState","mergedConfig","labelData","capsuleLength","setState","deepMerge","deepClone","data","length","capsuleValue","map","value","maxValue","Math","max","oneFifth","v","Array","fill","i","ceil","React","name","capsule","index","colors","label","unit","propTypes","PropTypes","object","defaultProps"],"mappings":";;;;;;;;;;;AAQA,IAAMA,gBAAgB;;;;;;;QAOd,EAPc;;;;;;;UAcZ,CACN,SADM,EAEN,SAFM,EAGN,SAHM,EAIN,SAJM,EAKN,SALM,EAMN,SANM,EAON,SAPM,CAdY;;;;;;QA4Bd;CA5BR;;AA+BA,IAAMC,eAAe,SAAfA,YAAe,OAAqB;yBAAlBC,MAAkB;MAAlBA,MAAkB,+BAAT,EAAS;;kBACuBC,eAAS;kBACxD,IADwD;eAE3D,EAF2D;mBAGvD;GAH8C,CADvB;;;MAC/BC,YAD+B,eAC/BA,YAD+B;MACjBC,SADiB,eACjBA,SADiB;MACNC,aADM,eACNA,aADM;MACWC,QADX;;kBAO9B,YAAM;QACRH,eAAeI,kBAAUC,eAAUT,aAAV,EAAyB,IAAzB,CAAV,EAA0CE,UAAU,EAApD,CAArB;;QAEQQ,IAHM,GAGGN,YAHH,CAGNM,IAHM;;;QAKV,CAACA,KAAKC,MAAV,EAAkB;;QAEZC,eAAeF,KAAKG,GAAL,CAAS;UAAGC,KAAH,SAAGA,KAAH;aAAeA,KAAf;KAAT,CAArB;;QAEMC,WAAWC,KAAKC,GAAL,yCAAYL,YAAZ,EAAjB;;QAEMM,WAAWH,WAAW,CAA5B;;aAES;gCAAA;qBAEQH,aAAaC,GAAb,CAAiB;eAAME,WAAWI,IAAIJ,QAAf,GAA0B,CAAhC;OAAjB,CAFR;iBAGI,IAAIK,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,CAAlB,EAAqBR,GAArB,CAAyB,UAACM,CAAD,EAAIG,CAAJ;eAAUN,KAAKO,IAAL,CAAUD,IAAIJ,QAAd,CAAV;OAAzB;KAHb;GAbF,EAkBG,CAAChB,MAAD,CAlBH;;SAqBEsB;;MAAK,WAAU,kBAAf;KACI,CAACpB,YAAF,IACCoB;oBAAA,CAAO,QAAP;;;;UACO,WAAU,cAAf;qBACgBd,IAAb,CAAkBG,GAAlB,CAAsB;cAAGY,IAAH,SAAGA,IAAH;iBACrBD;;cAAK,KAAKC,IAAV;;WADqB;SAAtB,CADH;;;;;;OADF;;;UAQO,WAAU,mBAAf;sBACiBZ,GAAd,CAAkB,UAACa,OAAD,EAAUC,KAAV;iBACjBH;;cAAK,WAAU,cAAf,EAA8B,KAAKG,KAAnC;;iCAEqBD,UAAU,GAA3B,6BACEtB,aAAawB,MAAb,CAAoBD,QAAQvB,aAAawB,MAAb,CAAoBjB,MAAhD,CADF;;WAHa;SAAlB,CADH;;;YAUO,WAAU,YAAf;oBACaE,GAAV,CAAc,UAACgB,KAAD,EAAQF,KAAR;mBACbH;;gBAAK,KAAKK,QAAQF,KAAlB;;aADa;WAAd;;OAnBP;OAyBI,CAACvB,aAAa0B,IAAf,IACCN;;UAAK,WAAU,WAAf;qBAAyCM;;;GA7BnD;CA3BF;;AAgEA7B,aAAa8B,SAAb,GAAyB;UACfC,UAAUC;;;CADpB,CAKAhC,aAAaiC,YAAb,GAA4B;UAClB;CADV;;;;"}