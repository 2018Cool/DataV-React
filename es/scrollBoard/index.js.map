{"version":3,"file":"index.js","sources":["../../src/components/scrollBoard/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Board header\r\n   * @type {Array<String>}\r\n   * @default header = []\r\n   * @example header = ['column1', 'column2', 'column3']\r\n   */\r\n  header: [],\r\n  /**\r\n   * @description Board data\r\n   * @type {Array<Array>}\r\n   * @default data = []\r\n   */\r\n  data: [],\r\n  /**\r\n   * @description Row num\r\n   * @type {Number}\r\n   * @default rowNum = 5\r\n   */\r\n  rowNum: 5,\r\n  /**\r\n   * @description Header background color\r\n   * @type {String}\r\n   * @default headerBGC = '#00BAFF'\r\n   */\r\n  headerBGC: '#00BAFF',\r\n  /**\r\n   * @description Odd row background color\r\n   * @type {String}\r\n   * @default oddRowBGC = '#003B51'\r\n   */\r\n  oddRowBGC: '#003B51',\r\n  /**\r\n   * @description Even row background color\r\n   * @type {String}\r\n   * @default evenRowBGC = '#003B51'\r\n   */\r\n  evenRowBGC: '#0A2732',\r\n  /**\r\n   * @description Scroll wait time\r\n   * @type {Number}\r\n   * @default waitTime = 2000\r\n   */\r\n  waitTime: 2000,\r\n  /**\r\n   * @description Header height\r\n   * @type {Number}\r\n   * @default headerHeight = 35\r\n   */\r\n  headerHeight: 35,\r\n  /**\r\n   * @description Column width\r\n   * @type {Array<Number>}\r\n   * @default columnWidth = []\r\n   */\r\n  columnWidth: [],\r\n  /**\r\n   * @description Column align\r\n   * @type {Array<String>}\r\n   * @default align = []\r\n   * @example align = ['left', 'center', 'right']\r\n   */\r\n  align: [],\r\n  /**\r\n   * @description Show index\r\n   * @type {Boolean}\r\n   * @default index = false\r\n   */\r\n  index: false,\r\n  /**\r\n   * @description Carousel type\r\n   * @type {String}\r\n   * @default carousel = 'single'\r\n   * @example carousel = 'single' | 'page'\r\n   */\r\n  carousel: 'single'\r\n}\r\n\r\nfunction calcHeaderData({ header, index }) {\r\n  if (!header.length) {\r\n    return []\r\n  }\r\n\r\n  header = [...header]\r\n\r\n  if (index) header.unshift('#')\r\n\r\n  return header\r\n}\r\n\r\nfunction calcRowsData({ data, index, headerBGC, rowNum }) {\r\n  if (index) {\r\n    data = data.map((row, i) => {\r\n      row = [...row]\r\n\r\n      const indexTag = `<span className=\"index\" style=\"background-color: ${headerBGC};\">${i +\r\n        1}</spand>`\r\n\r\n      row.unshift(indexTag)\r\n\r\n      return row\r\n    })\r\n  }\r\n\r\n  data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\r\n\r\n  const rowLength = data.length\r\n\r\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\r\n    data = [...data, ...data]\r\n  }\r\n\r\n  return data.map((d, i) => ({ ...d, scroll: i }))\r\n}\r\n\r\nfunction calcAligns(mergedConfig, header) {\r\n  const columnNum = header.length\r\n\r\n  let aligns = new Array(columnNum).fill('left')\r\n\r\n  const { align } = mergedConfig\r\n\r\n  return deepMerge(aligns, align)\r\n}\r\n\r\nconst ScrollBoard = ({ onClick, config, className, style }) => {\r\n  const { width, height, domRef } = useAutoResize(calcData, onResize)\r\n\r\n  const [state, setState] = useState({\r\n    mergedConfig: null,\r\n\r\n    header: [],\r\n\r\n    rowsData: [],\r\n\r\n    rows: [],\r\n\r\n    widths: [],\r\n\r\n    heights: [],\r\n\r\n    avgHeight: 0,\r\n\r\n    aligns: [],\r\n\r\n    animationIndex: 0\r\n  })\r\n\r\n  const {\r\n    mergedConfig,\r\n    header,\r\n    rowsData,\r\n    rows,\r\n    widths,\r\n    heights,\r\n    aligns\r\n  } = state\r\n\r\n  const timerRef = useRef(null)\r\n  const stateRef = useRef(state)\r\n\r\n  stateRef.current = state\r\n\r\n  function onResize() {\r\n    if (!mergedConfig) return\r\n\r\n    const widths = calcWidths(mergedConfig, rowsData)\r\n\r\n    const heightData = calcHeights(mergedConfig, header)\r\n\r\n    setState(state => ({ ...state, widths, ...heightData }))\r\n  }\r\n\r\n  function calcData() {\r\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n    const header = calcHeaderData(mergedConfig)\r\n\r\n    const rowsData = calcRowsData(mergedConfig)\r\n\r\n    const widths = calcWidths(mergedConfig, rowsData)\r\n\r\n    const heightData = calcHeights(mergedConfig, header)\r\n\r\n    const aligns = calcAligns(mergedConfig, header)\r\n\r\n    const data = {\r\n      mergedConfig,\r\n      header,\r\n      rowsData,\r\n      rows: [...rowsData],\r\n      widths,\r\n      ...heightData,\r\n      aligns\r\n    }\r\n\r\n    Object.assign(stateRef.current, data)\r\n\r\n    setState(state => ({ ...state, ...data }))\r\n\r\n    animation(true)\r\n  }\r\n\r\n  function calcWidths({ columnWidth, header }, rowsData) {\r\n    const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\r\n\r\n    let columnNum = 0\r\n    if (rowsData[0]) {\r\n      columnNum = rowsData[0].ceils.length\r\n    } else if (header.length) {\r\n      columnNum = header.length\r\n    }\r\n\r\n    const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\r\n\r\n    const widths = new Array(columnNum).fill(avgWidth)\r\n\r\n    return deepMerge(widths, columnWidth)\r\n  }\r\n\r\n  function calcHeights(\r\n    { headerHeight, rowNum, data },\r\n    header,\r\n    onresize = false\r\n  ) {\r\n    let allHeight = height\r\n\r\n    if (header.length) allHeight -= headerHeight\r\n\r\n    const avgHeight = allHeight / rowNum\r\n\r\n    return onresize\r\n      ? { avgHeight }\r\n      : { avgHeight, heights: new Array(data.length).fill(avgHeight) }\r\n  }\r\n\r\n  async function animation(start = false) {\r\n    let {\r\n      avgHeight,\r\n      animationIndex,\r\n      mergedConfig: { waitTime, carousel, rowNum },\r\n      rowsData\r\n    } = stateRef.current\r\n\r\n    const rowLength = rowsData.length\r\n\r\n    if (rowNum >= rowLength) return\r\n\r\n    if (start) await new Promise(resolve => setTimeout(resolve, waitTime))\r\n\r\n    const animationNum = carousel === 'single' ? 1 : rowNum\r\n\r\n    let rows = rowsData.slice(animationIndex)\r\n    rows.push(...rowsData.slice(0, animationIndex))\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      rows,\r\n      heights: new Array(rowLength).fill(avgHeight)\r\n    }))\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 300))\r\n\r\n    animationIndex += animationNum\r\n\r\n    const back = animationIndex - rowLength\r\n    if (back >= 0) animationIndex = back\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      animationIndex,\r\n      heights: [...state.heights].splice(\r\n        0,\r\n        animationNum,\r\n        ...new Array(animationNum).fill(0)\r\n      )\r\n    }))\r\n\r\n    timerRef.current = setTimeout(animation, waitTime - 300)\r\n  }\r\n\r\n  function emitEvent(ri, ci, row, ceil) {\r\n    const { ceils, rowIndex } = row\r\n\r\n    onClick && onClick({ row: ceils, ceil, rowIndex, columnIndex: ci })\r\n  }\r\n\r\n  const getBackgroundColor = rowIndex =>\r\n    mergedConfig[rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']\r\n\r\n  useEffect(() => {\r\n    calcData()\r\n\r\n    return () => clearTimeout(timerRef.current)\r\n  }, [config])\r\n\r\n  const classNames = useMemo(() => classnames('dv-scroll-board', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      {!!header.length && !!mergedConfig && (\r\n        <div\r\n          className='header'\r\n          style={{ backgroundColor: `${mergedConfig.headerBGC}` }}\r\n        >\r\n          {header.map((headerItem, i) => (\r\n            <div\r\n              className='header-item'\r\n              key={headerItem + i}\r\n              style={{\r\n                height: `${mergedConfig.headerHeight}px`,\r\n                lineHeight: `${mergedConfig.headerHeight}px`,\r\n                width: `${widths[i]}px`\r\n              }}\r\n              align={aligns[i]}\r\n              dangerouslySetInnerHTML={{ __html: headerItem }}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {!!mergedConfig && (\r\n        <div\r\n          className='rows'\r\n          style={{\r\n            height: `${height -\r\n              (header.length ? mergedConfig.headerHeight : 0)}px`\r\n          }}\r\n        >\r\n          {rows.map((row, ri) => (\r\n            <div\r\n              className='row-item'\r\n              key={row.toString() + row.scroll}\r\n              style={{\r\n                height: `${heights[ri]}px`,\r\n                lineHeight: `${heights[ri]}px`,\r\n                backgroundColor: `${getBackgroundColor(row.rowIndex)}`\r\n              }}\r\n            >\r\n              {row.ceils.map((ceil, ci) => (\r\n                <div\r\n                  className='ceil'\r\n                  key={ceil + ri + ci}\r\n                  style={{ width: `${widths[ci]}px` }}\r\n                  align={aligns[ci]}\r\n                  dangerouslySetInnerHTML={{ __html: ceil }}\r\n                  onClick={() => emitEvent(ri, ci, row, ceil)}\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nScrollBoard.propTypes = {\r\n  config: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nScrollBoard.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default ScrollBoard\r\n"],"names":["defaultConfig","calcHeaderData","header","index","length","unshift","calcRowsData","data","headerBGC","rowNum","map","row","i","indexTag","ceils","rowIndex","rowLength","d","scroll","calcAligns","mergedConfig","columnNum","aligns","Array","fill","align","deepMerge","ScrollBoard","start","stateRef","current","avgHeight","animationIndex","waitTime","carousel","rowsData","Promise","setTimeout","resolve","slice","push","state","animationNum","back","heights","splice","animation","onClick","config","className","style","useAutoResize","calcData","onResize","width","height","domRef","useState","setState","rows","widths","timerRef","useRef","calcWidths","heightData","calcHeights","deepClone","assign","columnWidth","usedWidth","reduce","all","w","avgWidth","headerHeight","onresize","allHeight","emitEvent","ri","ci","ceil","columnIndex","getBackgroundColor","clearTimeout","classNames","useMemo","classnames","backgroundColor","headerItem","__html","toString","propTypes","PropTypes","object","func","string","defaultProps"],"mappings":"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"}