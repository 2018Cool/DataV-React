{"version":3,"file":"index.js","sources":["../../src/components/activeRingChart/index.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Charts from '@jiaminghi/charts'\r\n\r\nimport DvDigitalFlop from '../digitalFlop'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Ring radius\r\n   * @type {String|Number}\r\n   * @default radius = '50%'\r\n   * @example radius = '50%' | 100\r\n   */\r\n  radius: '50%',\r\n  /**\r\n   * @description Active ring radius\r\n   * @type {String|Number}\r\n   * @default activeRadius = '55%'\r\n   * @example activeRadius = '55%' | 110\r\n   */\r\n  activeRadius: '55%',\r\n  /**\r\n   * @description Ring data\r\n   * @type {Array<Object>}\r\n   * @default data = [{ name: '', value: 0 }]\r\n   */\r\n  data: [{ name: '', value: 0 }],\r\n  /**\r\n   * @description Ring line width\r\n   * @type {Number}\r\n   * @default lineWidth = 20\r\n   */\r\n  lineWidth: 20,\r\n  /**\r\n   * @description Active time gap (ms)\r\n   * @type {Number}\r\n   * @default activeTimeGap = 3000\r\n   */\r\n  activeTimeGap: 3000,\r\n  /**\r\n   * @description Ring color (hex|rgb|rgba|color keywords)\r\n   * @type {Array<String>}\r\n   * @default color = [Charts Default Color]\r\n   * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\r\n   */\r\n  color: [],\r\n  /**\r\n   * @description Digital flop style\r\n   * @type {Object}\r\n   */\r\n  digitalFlopStyle: {\r\n    fontSize: 25,\r\n    fill: '#fff'\r\n  },\r\n  /**\r\n   * @description CRender animationCurve\r\n   * @type {String}\r\n   * @default animationCurve = 'easeOutCubic'\r\n   */\r\n  animationCurve: 'easeOutCubic',\r\n  /**\r\n   * @description CRender animationFrame\r\n   * @type {String}\r\n   * @default animationFrame = 50\r\n   */\r\n  animationFrame: 50\r\n}\r\n\r\nconst ActiveRingChart = ({ config = {} }) => {\r\n  const [{ activeIndex, mergedConfig }, setState] = useState({\r\n    activeIndex: 0,\r\n    mergedConfig: null\r\n  })\r\n\r\n  const domRef = useRef(null)\r\n  const chartRef = useRef(null)\r\n  const timerRef = useRef(null)\r\n\r\n  const digitalFlop = useMemo(() => {\r\n    if (!mergedConfig) return {}\r\n\r\n    const { digitalFlopStyle, data } = mergedConfig\r\n\r\n    const value = data.map(({ value }) => value)\r\n\r\n    const sum = value.reduce((all, v) => all + v, 0)\r\n\r\n    const percent = parseInt((value[activeIndex] / sum) * 100)\r\n\r\n    return { content: '{nt}%', number: [percent], style: digitalFlopStyle }\r\n  }, [mergedConfig, activeIndex])\r\n\r\n  const ringName = useMemo(\r\n    () => (!mergedConfig ? '' : mergedConfig.data[activeIndex].name),\r\n    [mergedConfig, activeIndex]\r\n  )\r\n\r\n  const fontSize = useMemo(\r\n    () =>\r\n      !mergedConfig\r\n        ? ''\r\n        : `font-size: ${mergedConfig.digitalFlopStyle.fontSize}px;`,\r\n    [mergedConfig]\r\n  )\r\n\r\n  function getRingOption(mergedConfig) {\r\n    const radius = getRealRadius(mergedConfig)\r\n\r\n    const newMergedConfig = {\r\n      ...mergedConfig,\r\n      data: mergedConfig.data.map(item => ({ ...item, radius }))\r\n    }\r\n\r\n    return {\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          ...newMergedConfig,\r\n          outsideLabel: {\r\n            show: false\r\n          }\r\n        }\r\n      ],\r\n      color: newMergedConfig.color\r\n    }\r\n  }\r\n\r\n  function getRealRadius({ radius, activeRadius, lineWidth }, active = false) {\r\n    const maxRadius = Math.min(...chartRef.current.render.area) / 2\r\n\r\n    const halfLineWidth = lineWidth / 2\r\n\r\n    let realRadius = active ? activeRadius : radius\r\n\r\n    if (typeof realRadius !== 'number') {\r\n      realRadius = (parseInt(realRadius) / 100) * maxRadius\r\n    }\r\n\r\n    const insideRadius = realRadius - halfLineWidth\r\n    const outSideRadius = realRadius + halfLineWidth\r\n\r\n    return [insideRadius, outSideRadius]\r\n  }\r\n\r\n  function ringAnimation() {\r\n    const radius = getRealRadius(mergedConfig)\r\n    const active = getRealRadius(mergedConfig, true)\r\n\r\n    const option = getRingOption(mergedConfig)\r\n\r\n    const data = option.series[0].data.map((item, i) => ({\r\n      ...item,\r\n      radius: i === activeIndex ? active : radius\r\n    }))\r\n\r\n    chartRef.current.setOption(option)\r\n\r\n    const { activeTimeGap } = option.series[0]\r\n\r\n    timerRef.current = setTimeout(foo => {\r\n      let newActiveIndex = activeIndex + 1\r\n\r\n      if (newActiveIndex >= data.length) {\r\n        newActiveIndex = 0\r\n      }\r\n\r\n      setState(state => ({ ...state, activeIndex: newActiveIndex }))\r\n    }, activeTimeGap)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // 第一次时初始化\r\n    chartRef.current || (chartRef.current = new Charts(domRef.current))\r\n\r\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n    chartRef.current.setOption(getRingOption(mergedConfig))\r\n\r\n    setState({ mergedConfig, activeIndex: 0 })\r\n\r\n    return () => clearTimeout(timerRef.current)\r\n  }, [config])\r\n\r\n  useEffect(ringAnimation, [activeIndex, mergedConfig])\r\n\r\n  return (\r\n    <div className='dv-active-ring-chart'>\r\n      <div className='active-ring-chart-container' ref={domRef} />\r\n      <div className='active-ring-info'>\r\n        <DvDigitalFlop config={digitalFlop} />\r\n        <div className='active-ring-name' style={fontSize}>\r\n          {ringName}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nActiveRingChart.propTypes = {\r\n  config: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nActiveRingChart.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default ActiveRingChart\r\n"],"names":["defaultConfig","name","value","ActiveRingChart","config","useState","activeIndex","mergedConfig","setState","domRef","useRef","chartRef","timerRef","digitalFlop","useMemo","digitalFlopStyle","data","map","sum","reduce","all","v","percent","parseInt","content","number","style","ringName","fontSize","getRingOption","radius","getRealRadius","newMergedConfig","item","color","activeRadius","lineWidth","active","maxRadius","Math","min","current","render","area","halfLineWidth","realRadius","insideRadius","outSideRadius","ringAnimation","option","series","i","setOption","activeTimeGap","setTimeout","newActiveIndex","length","state","Charts","deepMerge","deepClone","clearTimeout","propTypes","PropTypes","object","defaultProps"],"mappings":"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"}